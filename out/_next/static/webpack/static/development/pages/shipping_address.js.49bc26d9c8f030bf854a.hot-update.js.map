{"version":3,"file":"static/webpack/static/development/pages/shipping_address.js.49bc26d9c8f030bf854a.hot-update.js","sources":["webpack:///./pages/shipping_address.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport { Input, Checkbox } from 'antd';\nimport * as toastr from 'toastr';\nimport Cookies from 'universal-cookie';\nimport countries from '../constants/Countries';\nimport OrderServices from '../services/OrderServices';\nimport UserContext from '../components/contexts/UserContext';\n\nclass ShippingRates extends Component {\n\n  state = {\n    products: \"\",\n    address: {\n      name: \"\",\n      company: \"\",\n      street1: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      country: \"\"\n    },\n    addressCheck: \"\",\n    billing: true\n  }\n\n  static contextType = UserContext;\n\n  componentDidMount = () => {\n    const cookies = new Cookies();\n    this.setState({ products: cookies.get('Products'), countries });\n  }\n\n  getTotal() {\n    let counter = 0;\n    const cookies = new Cookies();\n    const cookieArr = cookies.get(\"Products\");\n    if (cookieArr !== undefined) {\n      for (let i = 0; i < cookieArr.length; i++) {\n        counter += (cookieArr[i].prize * cookieArr[i].qty);\n      }\n    }\n\n    return counter;\n  }\n\n\n  onChange = e => {\n    let { address } = this.state;\n    address[e.target.name] = e.target.value;\n    this.setState({ address });\n  }\n\n  validateAddress = () => {\n    const { address } = this.state;\n\n    if (address.name === '' || address.street1 === '' || address.city === '' || address.state === '' || address.zip === '' || address.country === '') {\n      toastr.error(\"Missing Fields\");\n      return;\n    } else {\n      OrderServices.checkAddress(address)\n        .then((res) => {\n          this.setState({ addressCheck: res });\n          this.context.setAddress(res);\n        })\n        .catch((e) => console.log(e))\n    }\n  }\n\n  useBilling = (e) => {\n    if (e.target.checked) {\n      this.setState({ billing: true });\n    } else {\n      this.setState({ billing: false });\n    }\n  }\n\n\n  render() {\nconsole.log(this.state)\n    if (this.getTotal() === 0) {\n      Router.push('/');\n      return null;\n    }\n\n    if (this.state.addressCheck === \"\") {\n      return (\n        <div>\n          <Input name=\"name\" placeholder=\"Enter Name\" onChange={this.onChange} />\n          <Input name=\"company\" placeholder=\"Enter Company\" onChange={this.onChange} />\n          <Input name=\"street1\" placeholder=\"Enter Complete Street\" onChange={this.onChange} />\n          <Input name=\"city\" placeholder=\"Enter City\" onChange={this.onChange} />\n          <Input name=\"state\" placeholder=\"Enter State \" onChange={this.onChange} />\n          <Input name=\"zip\" type=\"number\" placeholder=\"Enter Zipcode\" onChange={this.onChange} />\n          <Input name=\"country\" placeholder=\"Enter Country\" onChange={this.onChange} />\n          <Checkbox onChange={this.useBilling}>Use this as your Billing Address?</Checkbox>\n\n          <div>\n            <button onClick={() => this.validateAddress()}>Check address</button>\n          </div>\n        </div>\n      );\n\n    } else {\n      Router.push({\n        pathname: '/shipping_rate',\n        query: { \n          address: JSON.stringify(this.state.addressCheck), \n          billing: this.state.billing \n        }\n      });\n      return null;\n    }\n  }\n}\nexport default ShippingRates;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAZA;AACA;AAHA;AAoBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAvBA;AAuCA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA3CA;AA6CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AA3DA;AA6DA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAlEA;AACA;AAuBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAizGA;AACA;AADA;AACA;AAyGA;;;;A","sourceRoot":""}