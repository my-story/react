{"version":3,"file":"static/webpack/static/development/pages/profile/dashboard.js.a79baa75f3ffd634a82c.hot-update.js","sources":["webpack:///./components/profile/SurvivalKitProfile.js","webpack:///./components/profile/TipProfile.js"],"sourcesContent":["import React,{ Component } from 'react';\nimport * as toastr from 'toastr';\nimport KitServices from '../../services/KitServices';\n// import ProductKit from '../survivalKit/ProductKit';\nimport TechniqueProfile from '../profile/TechniqueProfile';\nimport TipProfile from './TipProfile';\n// import TipKit from '../survivalKit/TipKit';\n\nclass SurvivalKitProfile extends Component {\n\n    state = {\n        user: \"\",\n        kit: \"\",\n        tips: \"\"\n    };  \n    \n    // static getInitialProps({ query: { id } }) {\n    //     return { id };\n    // }\n\n    componentDidMount = () => {\n        this.setState({user:this.props.user});\n\n        KitServices.getKitProfile(this.props.kit)\n        .then((kit) => {\n            this.setState({kit}) \n        })\n        .catch((err) => console.log(err))\n    };\n\n\n    getProductsList = () => {\n        const {kit, user} = this.state;\n\n        if (kit) {\n            if (user.products.length > 0) {\n                kit.products.map((product , index) => { \n                    if (user.products.includes(product._id))\n                    {\n                        // console.log(product)\n                    } \n                })\n            }\n        }\n\n    };\n  \n\n    //Add three dots ... after a certain length of the string.\n    shrinkParagraph = (p) => {\n        // const {kit} = this.state;\n        const length = p.length;\n         if (length > 100){\n             return(\n                 <p>{p.substring(0,100)} ...</p>\n             )\n         } else {\n            return(\n                <p>{p}...</p>\n            )\n         }\n    };\n\n    render(){\n        const {kit, user } = this.state || {};\n        \n        console.log(this.state);\n\n        if (kit === undefined || kit.influencer === undefined ) {\n            return(<div>...</div>)\n        } else {\n            return (\n                <div className=\"product-kit-page\">\n                <div className=\"rectangle-survival-title\">\n                    <img className=\"rectangle-survival-title-picture\" src={kit.influencer.profilePic}/>\n                    <div className=\"review-survival-title\">\n                    <div>\n                        <h2 id=\"review-survival-title\"><b>{kit.title}</b></h2>\n                    </div>\n                    <div>\n                        <h4 id=\"review-survival-title\">{kit.influencer.name.firstName} {kit.influencer.name.lastName}</h4>\n                    </div>\n                    </div>\n                        <img id=\"survival-title-bookmark-image\" src=\"https://res.cloudinary.com/dpt8pbi8n/image/upload/v1575401603/Bookmark__Copy.svg\" alt=\"bookmark\" />\n                </div>\n                    <h1>{kit.title}</h1>\n                   \n                   \n                    {this.getProductsList()}\n                    {kit.techniques.map((technique , index) => { \n\t\t\t\t\t\tif (user.techniques.includes(technique._id))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn(\n                                <TechniqueProfile technique={technique}></TechniqueProfile>\n                            ) \n\t\t\t\t\t\t} \n                    })}\n                    {kit.tips.map((tip , index) => { \n                    if (user.tips.includes(tip._id))\n                    {\n                      return (\n                        <TipProfile tip={tip}></TipProfile>\n                      )\n                       \n                    }\n                    })}\n                \n                {/* {kit.products.map((p, index) => {\n                    let product = p.product;\n                    return(\n                    <ProductKit p={p} product={product} kit={kit} ></ProductKit>\n                    )\n                })} */}\n    \n                {/* //Techniques DESIGN FIGURE OUT How to dispaly all of them */}\n                {/* {kit.techniques.map((technique , index) => {\n                    return(\n                        <TechniqueKit technique={technique} kit={kit}></TechniqueKit>\n                    )\n                })\n                } */}\n\n                {/* TIPS MAP */}\n                {/* {kit.tips.map(( tip, index ) => {\n                    return(\n                        <div key={index}>\n                            <TipKit tip={tip} kit={kit} key={index}></TipKit>\n                        </div>\n                    )\n                })} */}\n\n                </div>\n            )    \n\n        }\n            }\n}\n\nexport default SurvivalKitProfile;","import React, { Component } from 'react';\n\nclass TipProfile extends Component {\n    state = {\n        tip: \"\"\n    }\n\n    componentDidMount() {\n        this.setState({tip: this.props.tip})\n    }\n\n\n    shrinkParagraph = (p) => {\n        // const {kit} = this.state;\n        const length = p.length;\n    \n            if (length > 180){\n                return(\n                    <p>{p.substring(0, 180)} ...</p>\n                )\n            } else {\n               return(\n                   <p>{p}</p>\n               )\n            }\n    }; \n    \n    openCard = () => {\n        let newSize = this.state.size === '130px' ? '180px' : '130px';\n        let newDivSize = this.state.divSize === '60px' ? '110px' : '60px';\n        this.setState({ size: newSize, divSize:newDivSize });\n    };\n\n    showMore = () => {\n        const { tip } = this.state;\n        \n        if (this.state.size === \"130px\") {\n                return(\n                <div onClick={this.openCard} className=\"learn-more-survival-tip\">\n                        <p>Show more</p>\n                        <img id=\"arrow-down-kit-tip\" src=\"https://res.cloudinary.com/dpt8pbi8n/image/upload/v1575324512/chevron-left_2_copy_2.svg\" alt=\"laern more arrow\" />\n                </div>\n                )\n        } else {\n                return(\n                <div>\n                    <p id=\"tip-kit-box-description\">{tip.description}.</p>\n                    <div onClick={this.openCard} className=\"learn-more-survival-tip\">\n                        <p>Show less</p>\n                        <img style={{transform:\"rotate(-180deg)\"}}id=\"arrow-down-kit-tip\" src=\"https://res.cloudinary.com/dpt8pbi8n/image/upload/v1575324512/chevron-left_2_copy_2.svg\" alt=\"laern more arrow\" />\n                    </div>\n                </div>\n                )\n        }\n};\n\n    render() {\n        const { tip } = this.state;\n\n        if (tip === \"\") {\n            return(\n                <div>Loading...</div>\n            )\n        } else {\n            return (\n                <div style={{height:this.state.size}} className=\"tip-kit-div-card\">\n                <div className=\"tip-card-image-div\">\n                    <img id=\"tip-bulb\" src=\"https://res.cloudinary.com/dpt8pbi8n/image/upload/v1582921452/TECHNIQUES_FONTGUIDEAsset_4_300x.png\"/>\n                </div>\n                <div className=\"tip-kit-description\">\n                    <p style={{fontSize:\"3.5vh\", height: this.state.divSize}} id=\"tip-kit-header\">\n                    {this.shrinkParagraph(tip.header)}\n                    </p>\n                    {this.showMore()}\n\n                    {/* <p>{tip.description}</p> */}\n                </div>\n                <div className=\"line-2\"></div>\n            <div className=\"tip-survival-prize-div\">\n                    <div className=\"survival-save-favorite\">\n                        <img src=\"https://res.cloudinary.com/dpt8pbi8n/image/upload/v1575401603/Bookmark__Copy.svg\" alt=\"bookmark\" />\n                    </div>\n                </div>\n            </div>\n            );\n        }\n\n    }\n}\n\nexport default TipProfile;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAHA;AACA;AAHA;AAaA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AArBA;AAwBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAtCA;AA0CA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AArDA;AACA;AAshIA;AACA;AAiIA;;;;;;;;;;;;;;;;;;;AC1IA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAxBA;AA0BA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA9BA;AAgCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AApDA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AA8CA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAtFA;AACA;AAuFA;;;;A","sourceRoot":""}